#include <TimerOne.h>
#include <LiquidCrystal_I2C.h> //SDA = A4, SCL = A5
LiquidCrystal_I2C lcd(0x27, 16, 2);
float result;
int d = 0;
int d_old = -1;
int i;
int sign;
long value;
long pwm;
int clockpin = 9;
int datapin = 6;
int period = 128;
int pwmpin = A3;
unsigned long tempmicros;

void setup() {
  Serial.begin(115200);  
  lcd.init();
  lcd.backlight();
  lcd.home (); // go home (0, 0)
  lcd.print("Width:");    
  lcd.setCursor(0, 1);
  lcd.print("Speed:");    

  pinMode(clockpin, INPUT);
  pinMode(datapin, INPUT);
  pinMode(pwmpin, INPUT);
  Timer1.initialize(period);
  makeOutput(0);
  Serial.println("Ready");
}

void loop () {
while (digitalRead(clockpin) == HIGH) {}
  tempmicros = micros();
  while (digitalRead(clockpin) == LOW) {}
  if ((micros() - tempmicros) > 500) {
    decode();
  }

}


void makeOutput(int um)
{
  digitalWrite(clockpin,HIGH);
  int x = analogRead(pwmpin);
  int value = d;
  d = (x/100) * 1;       
  if (d <= 1) d = 1;
  while (analogRead(pwmpin) == HIGH) { }
  while (digitalRead(clockpin) == LOW) { }
  Timer1.pwm(pwmpin, value);


}

void decode() {
  sign = 1;
  i = 0;
  value = 0;
  result = 0;
  digitalRead(datapin);
  for (i = 1; i <= 24; i++)) {
    while (digitalRead(clockpin) == LOW) {};
  for (i = 1; i <= 20; i++) {   
    while (digitalRead(clockpin) == HIGH) {};
        if (digitalRead(datapin) == LOW) {
      if (i < 20) {
        value |= 1 << i;
      }
      if (i == 20) {
        sign = -1;

      }

    }

  }

  result = (value * sign) / 100.00;
  makeOutput(value);
  interrupts();                          
  lcd.setCursor(7, 0);
  lcd.print(result, 4);
  lcd.print(" in     ");
  lcd.setCursor(7, 1);
  lcd.print(d);                        
  lcd.print(" ");
  noInterrupts();                          
  delay(1000);
  result = (value * sign) / 100.00;
  interrupts();
  lcd.setCursor(7, 0);
  lcd.print(result, 2);
  lcd.print(" mm     ");
  lcd.setCursor(7, 1);
  lcd.print(d);                        
  lcd.print(" ");
  noInterrupts();
  Serial.println(result, 2);
  delay(1000);

}
